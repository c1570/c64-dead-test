C-64 Dead Test Rev 781220 kinzi 006
===================================

(Deutsche Version nachstehend / German version below.)

I disassembled the original C-64 DEAD TEST REV 781220 using "WFDis" 
(https://www.white-flame.com/wfdis/), commented the code (not yet fully 
finished), relocated constants, strings, the charset etc., changed it to ACME
standard format and "improved" (I hope :-) a few things. 

I am neither an ACME expert nor a divine coder. Many things might be done in 
more beauty or ellegance, since this is my first usage of ACME (or an 
assembler at all, because I used only monitors for coding assembler in my 
former life. :-) So please have mercy with me ... 

* Border color is now changed to light gray on second opcode after initial SEI
  and thus as early as possible. If the CPU is able to read the reset vector
  but crashes after a few opcodes the border (screen) stays light gray.
  (Was black in original version = the VIC power-up default.)
  
* Border color changes to cyan in initial RAM test. (Stayed black in original
  version.)

* Character set in original version is hard to read, especially digits.
  Changed to standard C-64 character set.

* Sound test now plays four wave forms including noise and "in right order" -
  triangle, sawtooth, square, noise.

* "BAD" on tests led to infinitive loop already in original verion. This is
  now announced by cycling through the border colors in this loop, as done
  in Easy Flash 3 when unable to reset.
  
* The screen layout has been expanded slightly, data bit numbers were added
  and also the IC identifiers for the 250466 and 250469 boards to ease 
  things when repairing. :-) "OK" results for tests are now green to clarify
  things.
  
* Two low-current LEDs can be connected to TAPE Port on lines "MOTOR" and 
  "SENSE" to show activity even on systems with no screen output. They should
  be connected to ground via a 1,8 kOhm or greater resistor to protect to CPU 
  port. The LEDs will flip their status every time the TOD clock display is 
  updated (every 20 seconds or so) and will blink together with the screen 
  if RAM error are "blinked" out during initial RAM test.
  
  Check64 V2.0 from GMP@Forum64 is planned to incorporate these two LEDs.
  
  In former versions I proposed 1 kOhm resistors but that seems a too small
  value right now. CPU die shots show that the CPU port is built very similar
  to the 6522 outputs on Port A (push-pull), so I'd presume the outputs can
  source/sink a similar amount of current safely resp. sinking max. 1.6 mA.

Use the source code for whatever you want (it isn't even mine in large parts)
but be fair and give credits ;-) ...

News in 003:

* Border color is decremented during initial RAM test, providing a primitive
  way of "progess status".
  
* Bug fix: ram error blinking sequence was broken, always blinked just one
  time not corresponding to regarding bit.

News in 004:

* Bug fix: LEDs were not blinking any more during tests because of a typo.

* The LEDs flip their status now even during initial RAM test, just when the
  border color is decremented. They also change their status after Zero Page
  and Stack test.
  
News in 005:

* Bug fix: Color RAM was always tested with pattern "00" only. Fixed.

News in 006:

* It seems 28C64 EEPROMs sometimes lead to problems with Dead Test 005. No
  idea why, couldn't reproduce it here. If you encounter troubles during
  Initial RAM Test try using a 27(C)64 EPROM instead.
  
* Bug fix: CIAs' real time clocks were not properly initialized, leading to
  a wrong startup time (11-00-00 instead of 00-00-00). Bug was introduced 
  with 001. :-)
  
* Bug fix: No Interrupt Service Routine (ISR) was defined before, the IRQ
  vector pointed to $F000. Could lead to problems if IRQ is clamped to GND.
  An ISR containing a simple "RTI" is now provided.
  
* Changed initial color change method from DEC to STX in (rare) case of wrong
  "read modify write" operations happening with a bad CPU.


------------

Ich habe das originale C-64 DEAD TEST REV 781220 mit dem "WFDis" Disassemler
(https://www.white-flame.com/wfdis/), den Code weitgehend kommentiert 
sowie einige Dinge umgestellt (Strings, Tabellen, Zeichensatz usw.), ans
ACME-Format angepasst und (hoffentlich :-) einige Dinge verbessert.

Ich bin weder ein ACME-Experte noch ein begnadeter Programmierer, daher wird
vermutlich vieles schöner oder einfacher zu lösen sein, auch weil das mein
erstes "Projekt" ist, für das ich ACME verwendet habe; bzw. überhaupt einen 
Assembler, denn bisher habe ich Assembler immer nur im Monitor gecodet. :-)
Ich bitte also um Nachsicht. :-)

* Die Rahmenfarbe wird beim zweiten Befehl (nach dem initialen SEI) auf 
  hellgrau gestellt, also so früh wie möglich. Wenn die CPU den Reset-Vektor
  lesen kann und startet, dann aber nach ein paar Befehlen crasht bleibt der
  Rahmen (und damit der Hintergrund) hellgrau. In der Originalversion ist er
  zu diesem Zeitpunkt schwarz - das ist der Standardwert des VIC beim 
  Einschalten.
  
* Die Rahmenfarbe wechselt beim initialen RAM-Test auf türkis. (In der
  originalen Version bliebt der Bildschirm hier ebenfalls schwarz).
  
* Der Zeichensatz des Originals ist schlecht lesbar, vor allem die Ziffern.
  Ich habe den originalen C-64-Zeichensatz eingebaut.
  
* Der Sound-Test spielt nun alle vier Wellenformen inkl. "Rauschen", und zwar
  in der "richtigen" Reihenfolge (Dreicke, Sägezahn, Rechteck, Rauschen).
  
* Trifft der RAM-Test auf Fehler und wirft BAD neben den IC-Bezeichnungen
  aus, wird in eine Endlosschleife gesprungen, wie auch bereits bei der
  Original-Version. Jetzt wird in dieser Endlosschleife die Rahmenfarbe
  durchgerollt, wie es das Easy Flash 3 auch macht, wenn es keinen Reset
  auslösen konnte.
  
* Der Bildschirmaufbau wurde etwas überarbeitet, es werden nun die
  Bezeichnungen der Datenleitungen neben den IC-Namen angeführt, ebenso wie
  die (abweichenden) IC-Nummern der 250466 und 250469; dies erleichtert 
  Reparaturen. :-) Bei Tests mit Ergebnis "OK" erscheint dieses nun in grün.
  
* Am TAPE-Port können zwei Low-Current-LEDs, jeweils an "MOTOR" und "SENSE"
  angeschlossen werden, über jeweils einen Widerstand von mindestens 1,8 kOhm
  zum Schutz des I/O-Ports der CPU. Die LEDs wechseln ihren Status bei jedem
  Update der Uhren-Anzeige rechts unten, also ca. alle 20 Sekunden.
  Außerdem blinken sie mit dem Bildschirm mit, wenn beim initialen RAM-Test
  ein Fehler festgestellt wird. Das ist vor allem auf Rechnern mit kaputter
  Bildschirmausgabe interessant.

  In einer früheren Anleitung ahbe ich 1 kOhm-Vorwiderstände vorgeschlagen,
  was sich jetzt als vermutlich zu klein herausstellt. Die-Shots der CPU 
  zeigen, dass die CPU-Port-Ausgänge sehr ähnlich den "6522-Port-A"-Ausgängen
  aufgebaut sind und daher wohl ähnliche Ströme liefern können, das wären
  ca. 1,6 mA. 
  
  Das Check64 V2.0 von GMP aus dem Forum64 wird diese LEDs voraussichtlich
  bereits mitbringen.
  
Macht mit dem Source-Code, was ihr wollt (ist großteils eh nicht meiner :-),
aber schmückt euch nicht damit und "gebt credits". ;-)

Neues in 003:

* Die Rahmenfarbe wird während des initialen RAM Tests nun bei jedem neuen
  Testpattern dekrementiert und stellt daher eine einfache Verlaufskontrolle
  dar.

* Bug fix: Das "RAM-Fehlerblinken" war kaputt, es hat nur noch einmal 
  geblinkt, unabhängig vom betroffenen Bit.

Neues in 004:

* Bug fix: Die LEDs hatten nicht mehr geblinkt während der Tests auf Grund
  eines Tippfehlers.

* Die LEDs ändern ihren Status nun auch während des initialen RAM-Tests, 
  gemeinsam mit der Rahmenfarbe. Außerdem werden sie auch nach dem Zero Page
  und dem Stack Test umgeschaltet.

Neues in 005:

* Bug fix: Das Color RAM wurde immer nur mit dem Test-Pattern "00" getestet.
  Behoben.

Neues in 006:

* Offenbar führt die Verwendung von 28C64 EEPROMs manchmal zu Problemen mit 
  Dead Test 005 - keine Ahnung, wieso; ich konnte das nicht nachstellen.
  Falls es damit Probleme geben sollte, bitte stattdessen ein 27(C)64 EPROM 
  verwenden.
  
* Bug fix: Die Echtzeituhren in den CIAs wurden nicht richtig initialisiert,
  was zu einer falschen Uhrzeitanzeige beim Start führte (11-00-00 statt 
  00-00-00). Der Bug wurde mit 001 "eingeführt". :-) 
  
* Bug fix: Bisher war keine Interrupt Service Routine (ISR) definiert, der 
  IRQ-Vektor zeigte auf $F000. Das konnte zu Problemen führen, wenn die IRQ-
  Leitung durch einen Fehler auf GND klemmt. Es existiert nun eine ISR 
  bestehend aus einem einfachen "RTI".
  
* Die Methode, um ganz am Anfang die Rahmenfarbe zu ändern, wurde von einem
  DEC auf ein STX geändert - für den (seltenen) Fall, dass die CPU Probleme
  mit "Read Modify Write"-Operationen hätte.

------------

kinzi, 2022-09-18
  
